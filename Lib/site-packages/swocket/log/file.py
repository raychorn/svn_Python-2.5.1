r"""This module does file logging"""
import sys
from time import strftime,localtime
class logClass:
  def __init__(self,parent):
    self.parent=parent
    self.files={}
    attrib=self.parent.doc.attributes
    for n in ('logfile','logerrorfile','logdebugfile'):
      if attrib.has_key(n):
        v=attrib[n].value
        if v=='' or v=='/dev/null':
          self.files[n]=nullFile()
        else: self.files[n]=open(v,'a')
      else: self.files[n]=nullFile()
    sys.stderr=sys.stdout=self.files['logdebugfile']

  def log(self,text):
    f=self.files['logfile']
    f.write('%s - %s\n'%(timestr(),text))
    f.flush()
    
  def logerror(self,text):
    f=self.files['logerrorfile']
    f.write('%s - %s\n'%(timestr(),text))
    f.flush()
    
    
  def logdebug(self,text):
    f=self.files['logdebugfile']
    f.write('%s - %s\n'%(timestr(),text))
    f.flush()
    
  def destroy(self):
    for n in self.files.values(): n.close()

def timestr():
  return strftime("%a, %d %b %Y %H:%M:%S %Z", localtime())

class nullFile:
  def __init__(self):
    pass
    
  def write(self,text):
    pass
    
  def flush(self):
    pass
    
  def close(self):
    pass
