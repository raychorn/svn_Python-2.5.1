from visual.graph import *
from time import clock

# Using a graph-plotting module

# If xmax, xmin, ymax, or ymin specified, the related axis is not autoscaled
# Can turn off autoscaling with
#    oscillation.autoscale[0]=0 for x or oscillation.autoscale[1]=0 for y

oscillation = gdisplay(title='Test Plotting', xtitle='Time', ytitle='Response',
        x=0, y=0, width=800, height=400)

funct1 = gcurve(color=color.cyan)
funct2 = gvbars(color=color.red, delta=0.8)
funct3 = gdots(color=color.yellow)

print "start timing"
tt = clock()
for n in range(1):
    for t in arange(-30, 76, 1):
        funct1.plot(pos=(t, 5.0+5.0*cos(-0.2*t)*exp(0.015*t)) )
        funct2.plot(pos=(t, 2.0+5.0*cos(-0.1*t)*exp(0.015*t)) )
        funct3.plot(pos=(t, 5.0*cos(-0.03*t)*exp(0.015*t)) )
tt = clock()-tt
print '%0.1f sec' % tt

histo = gdisplay(title='Histogram', x=0, y=400, width=800,height=400)
datalist1 = [5, 37, 12, 21, 25, 28, 8, 63, 52, 75, 7]
data = ghistogram(bins=arange(-20, 80, 10), color=color.red)
data.plot(data=datalist1)
datalist2 = [7, 23, 25, 72, -15]
data.plot(data=datalist2, accumulate=1)
